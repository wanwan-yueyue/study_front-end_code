/* 通配符选择器 *：样式重置 */
/* 
 清除所有 HTML 元素默认的margin（外边距）和padding（内边距），
 避免不同浏览器默认样式差异导致的布局混乱。 
*/
*
{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body
{
    /* 将body设为弹性容器 */
    display: flex;
    /* 让body的子元素居中显示 */
    justify-content: center;
    align-items: center;
    /* 确保body至少占满整个视口高度 */
    min-height: 100vh;
    background: #1b1b1b;
}

.container
{
    position: relative;
    width: 100%;
    height: 400px;
    display: flex;
    justify-content: center;
    border-bottom: 1px solid rgba(255,255,255,0.1);
}

.container .cloud
{
    position: relative;
    width: 320px;
    height: 100px;
    border-radius: 100px;
    /* 为云朵添加阴影效果（向右下偏移 8px，颜色为透明度 5% 的黑色） */
    filter: drop-shadow(8px 8px 0 #0005);
    /* 
     指定云朵应用名为animateCloud的动画，
     持续 2 秒，线性速度（匀速），无限循环 
    */
    animation: animateCloud 2s steps(1) infinite;
}

/* 关键帧定义了云朵的循环动画效果，通过filter属性的变化实现光影流动感 */
@keyframes animateCloud
{
    0%
    {
        filter: drop-shadow(8px 8px 0 #0001) drop-shadow(0 0 0 
        #fff) brightness(1);
    }
    95%
    {
        filter: drop-shadow(8px 8px 0 #0001) drop-shadow(0 0 50px 
        #fff5) brightness(10);
    };
}

.container .cloud::before
{
    content: '';
    position: absolute;
    top: -50px;
    left: 40px;
    width: 110px;
    height: 110px;
    border-radius: 50%;
    background: #484f59;
    box-shadow: 90px -10px 0 30px #484f59;
}

.container .cloud::after
{
    content: '';
    position: absolute;
    inset: 0;
    background: #484f59;
    border-radius: 100px;
    z-index: 1000;
}

.container .cloud .drop
{
    /* 使雨滴脱离文档流，以云朵为参考系定位 */
    position: absolute;
    /* 让雨滴从云朵顶部开始下落 */
    top: 40px;
    background: #05a2eb;
    width: 2px;
    height: 10px;
    /* 
     后续雨滴的缩放动画（如落地时变扁）会以雨滴底部为基准，而非中心，
     使动画更贴近真实雨滴落地的物理效果 
    */
    transform-origin: bottom;
    animation: animate 2s linear infinite;
}

/* 这组关键帧定义了雨滴从 “下落” 到 “落地溅开” 的完整生命周期 */
@keyframes animate
{
    0%
    {
        transform: translateY(0) scaleY(1);
    }
    70%
    {
        transform: translateY(360px) scaleY(1);
    }
    80%
    {
        transform: translateY(360px) scaleY(0.2);
    }
    100%
    {
        transform: translateY(360px) scaleY(0) scaleX(15);
    }
}